---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/commit-id: 908145db523f576f1760b7c97f33e090100d623c
    app.quarkus.io/build-timestamp: 2022-08-27 - 20:27:03 +0000
  labels:
    app.kubernetes.io/name: eks-quarkus
    app.kubernetes.io/part-of: eks-quarkus
    app.kubernetes.io/version: "1.0"
  name: eks-quarkus
  namespace: quarkus
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: eks-quarkus
    app.kubernetes.io/part-of: eks-quarkus
    app.kubernetes.io/version: "1.0"
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/commit-id: 908145db523f576f1760b7c97f33e090100d623c
    app.quarkus.io/build-timestamp: 2022-08-27 - 20:27:03 +0000
  labels:
    app.kubernetes.io/name: eks-quarkus
    app.kubernetes.io/part-of: eks-quarkus
    app.kubernetes.io/version: "1.0"
  name: eks-quarkus
  namespace: quarkus
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: eks-quarkus
      app.kubernetes.io/part-of: eks-quarkus
      app.kubernetes.io/version: "1.0"
  template:
    metadata:
      annotations:
        app.quarkus.io/commit-id: 908145db523f576f1760b7c97f33e090100d623c
        app.quarkus.io/build-timestamp: 2022-08-27 - 20:27:03 +0000
      labels:
        app.kubernetes.io/name: eks-quarkus
        app.kubernetes.io/part-of: eks-quarkus
        app.kubernetes.io/version: "1.0"
      namespace: quarkus
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: smoell/aws-eks-quarkus-example-native:1.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: eks-quarkus
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
      serviceAccountName: serviceaccount.quarkus.amazon.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.quarkus.io/commit-id: 908145db523f576f1760b7c97f33e090100d623c
    app.quarkus.io/build-timestamp: 2022-08-27 - 20:27:03 +0000
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  labels:
    app.kubernetes.io/name: eks-quarkus
    app.kubernetes.io/part-of: eks-quarkus
    app.kubernetes.io/version: "1.0"
  name: eks-quarkus
  namespace: quarkus
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: eks-quarkus
                port:
                  name: http
            path: /
            pathType: Prefix
